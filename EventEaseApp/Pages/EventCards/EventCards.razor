@page "/eventcards"
@layout EventCardsLayout

@using EventEaseApp.Components
@using EventEaseApp.Models
@using EventEaseApp.Services
@using EventEaseApp.Shared

@inject EventsService EventsService
@inject NavigationManager NavManager
@inject ILogger<EventCards> Logger

<h3>Event Cards</h3>

@if(Events==null)
{
    <Loading/>
}
else if(Events.Count==0)
{
    <p>No planned event right now.</p>
}
else
{
    @for(var i=0;i<Events.Count;i++)
    {
        <EventCard Id="@i" Name="@(Events[i].Name)" Date="@(Events[i].Date)" Location="@(Events[i].Location)" OnClick="HandleOnClickEvent"></EventCard>
    }
}

@code {
    private List<Event> Events {get; set;}

    protected override async Task OnInitializedAsync()
    {
        Logger.LogInformation("Fetching events from service.");
        Events = await EventsService.GetEvents();
        Logger.LogInformation("Events loaded.");
    }

    private void HandleOnClickEvent(int id)
    {
        NavManager.NavigateTo("eventcards/detail/"+id);
    }
}
