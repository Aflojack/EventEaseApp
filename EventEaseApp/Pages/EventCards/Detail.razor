@page "/eventcards/detail/{id:int}"
@layout EventCardsLayout

@using EventEaseApp.Components
@using EventEaseApp.Services
@using EventEaseApp.Models

@inject EventsService EventsService
@inject NavigationManager NavManager
@inject ILogger<Detail> Logger

<h3>Event Detail:</h3>

@if(CurrentEvent==null)
{
    <Loading/>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col">
                <b>Name:</b>
            </div>
            <div class="col">
                @CurrentEvent.Name
            </div>
        </div>
        <div class="row">
            <div class="col">
                <b>Date:</b>
            </div>
            <div class="col">
                @CurrentEvent.Date
            </div>
        </div>
        <div class="row">
            <div class="col">
                <b>Location:</b>
            </div>
            <div class="col">
                @CurrentEvent.Location
            </div>
        </div>
        <div class="row">
            <div class="col">
                <b>Description:</b>
            </div>
        </div>
        <div class="row">
            <div class="col">
                @CurrentEvent.Description
            </div>
        </div>
    </div>
}



@code {
    [Parameter]
    public int Id {get; set;}

    private Event CurrentEvent {get; set;}

    protected override async Task OnInitializedAsync()
    {
        Logger.LogInformation("Fetching event from service.");
        CurrentEvent = await EventsService.GetEvent(Id);
        if(CurrentEvent==null)
        {
            Logger.LogWarning($"Provided '{Id}' id not found or not exists. Rerouting to /eventcards.");
            NavManager.NavigateTo("eventcards", forceLoad: false);
        }
        Logger.LogInformation("Event loaded.");
    }
}
